{"version":3,"sources":["webpack:///./src/scripts/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS,MAAM,oBAAoB;AAC3E;AACA,qDAAqD,SAAS;AAC9D,OAAO;AACP,2CAA2C,eAAe;AAC1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA,QAAQ,EAAE,WAAW,UAAU,GAAG,UAAU,UAAU;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB,8BAA8B,YAAY;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;;AAEA;AACA,eAAe;AACf,gBAAgB;AAChB,kBAAkB;AAClB,iBAAiB;AACjB,QAAQ,sBAAsB,aAAa;AAC3C;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B,YAAY;AAC3E;AACA;AACA;AACA;AACA,uCAAuC,SAAS,EAAE;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC","file":"main.image-compare-viewer.js","sourcesContent":["const defaults = {\n  smoothing: true,\n  smoothingAmount: 100,\n  controlColor: \"#FFFFFF\",\n  controlShadow: true,\n  fluidMode: false,\n};\n\nclass ImageCompare {\n  constructor(el, settings = {}) {\n    this.settings = Object.assign(defaults, settings);\n    this.el = el;\n    this.images = {};\n    this.wrapper = null;\n    this.control = null;\n    this.arrowContainer = null;\n    this.active = false;\n    this.slideWidth = 50;\n  }\n\n  mount() {\n    this._shapeContainer();\n    this._getImages();\n    this._buildControl();\n    this._events();\n  }\n\n  _events() {\n    // Desktop events\n    this.el.addEventListener(\"mousedown\", () => this._activate(true));\n    this.el.addEventListener(\n      \"mousemove\",\n      (ev) => this.active && this._slideCompare(ev)\n    );\n\n    this.el.addEventListener(\"mouseup\", () => this._activate(false));\n    this.el.addEventListener(\"mouseleave\", () => this._activate(false));\n\n    // Mobile events\n    this.el.addEventListener(\"touchstart\", () => this._activate(true));\n    this.el.addEventListener(\n      \"touchmove\",\n      (ev) => this.active && this._slideCompare(ev)\n    );\n    this.el.addEventListener(\"touchend\", () => this._activate(false));\n\n    // hover\n\n    this.el.addEventListener(\"mouseenter\", () => {\n      this.arrowContainer.style.width = \"100%\";\n    });\n\n    this.el.addEventListener(\"mouseleave\", () => {\n      this.arrowContainer.style.width = \"50%\";\n    });\n  }\n\n  _slideCompare(ev) {\n    let bounds = this.el.getBoundingClientRect();\n    let x =\n      ev.touches !== undefined\n        ? ev.touches[0].clientX - bounds.left\n        : ev.clientX - bounds.left;\n    let position = (x / bounds.width) * 100;\n    if (position >= 0 && position <= 100) {\n      this.control.style.left = `calc(${position}% - ${this.slideWidth / 2}px)`;\n      if (this.settings.fluidMode) {\n        this.wrapper.style.clipPath = `inset(0 0 0 ${position}%)`;\n      } else {\n        this.wrapper.style.width = `calc(${100 - position}%)`;\n      }\n    }\n  }\n\n  _activate(state) {\n    this.active = state;\n  }\n\n  _shapeContainer() {\n    let imposter = document.createElement(\"div\");\n\n    this.el.style.cssText = `\n        position: relative;\n        overflow: hidden;\n        cursor: col-resize;\n      `;\n\n    imposter.style.cssText = `\n    z-index: 4;\n    position: absolute;\n    top: 0; left: 0;\n    width: 100%;\n    height: 100%;\n    `;\n\n    this.el.appendChild(imposter);\n  }\n\n  _buildControl() {\n    let control = document.createElement(\"div\");\n    let uiLine = document.createElement(\"div\");\n    let arrows = document.createElement(\"div\");\n    const arrowSize = \"20\";\n\n    arrows.style.cssText = `\n        width: 50%;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        position: absolute;\n        transition: 0.1s ease-out;\n        z-index: 5;\n    `;\n\n    for (var idx = 0; idx <= 1; idx++) {\n      let arrow = `<svg\n       style=\"transform: rotateZ(${\n         idx === 0 ? `180deg` : `0deg`\n       }); height: ${arrowSize}px; width: ${arrowSize}px;\n       \n       ${\n         this.settings.controlShadow &&\n         `\n       -webkit-filter: drop-shadow( 0px 3px 5px rgba(0, 0, 0, .5));\n       filter: drop-shadow( 0px ${\n         idx === 0 ? \"-3px\" : \"3px\"\n       } 5px rgba(0, 0, 0, .5));\n       `\n       }\n       \"\n       xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 42 86.6\">\n       <path fill=\"${\n         this.settings.controlColor\n       }\" d=\"M0 43.3V0l21 21.6 21 21.7L21 65 0 86.6V43.3z\"/>\n     </svg>`;\n      arrows.innerHTML += arrow;\n    }\n\n    control.style.cssText = `\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    height: 100%;\n    width: ${this.slideWidth}px;\n    top: 0;\n    left: calc(50% - ${this.slideWidth / 2}px);\n    z-index: 5;\n    ${\n      \"ontouchstart\" in document.documentElement\n        ? ``\n        : this.settings.smoothing\n        ? `transition: ${this.settings.smoothingAmount}ms ease-out;`\n        : ``\n    }\n    `;\n\n    uiLine.style.cssText = `\n        height: 100%;\n        width: 3px;\n        z-index: 6;\n        background: ${this.settings.controlColor};\n        ${\n          this.settings.controlShadow &&\n          `box-shadow: 0px 0px 15px rgba(0,0,0,0.5);`\n        }\n    `;\n\n    control.appendChild(uiLine);\n    control.appendChild(arrows);\n\n    this.arrowContainer = arrows;\n\n    this.control = control;\n    this.el.appendChild(control);\n  }\n\n  _getImages() {\n    let children = this.el.children;\n    children = [...children].filter((el) => el.nodeName === \"IMG\");\n\n    for (let idx = 0; idx <= 1; idx++) {\n      let child = children[idx];\n\n      child.style.cssText = `\n      width: ${idx === 1 ? `auto` : `100%`};\n      height: ${idx === 1 ? `100%` : `auto`};\n      position: ${idx === 1 ? `absolute` : `static`};\n      z-index: ${idx === 0 ? \"1\" : \"2\"};\n      ${idx === 1 ? `right: 0;` : `left: 0;`};\n      top: 0;\n      display: ${this.settings.fluidMode ? \"none\" : \"block\"};\n      pointer-events: none;\n      -khtml-user-select: none;\n      -o-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n      `;\n\n      if (idx === 1) {\n        let wrapper = document.createElement(\"div\");\n        let afterUrl = children[1].src;\n        wrapper.style.cssText = `\n            position: absolute;\n            width: ${this.settings.fluidMode ? \"100%\" : \"50%\"};\n            height: 100%;\n            right: 0;\n            top: 0;\n            overflow: hidden;\n            background-size: cover;\n            background-position: center;\n            z-index: 3;\n            ${\n              \"ontouchstart\" in document.documentElement\n                ? ``\n                : this.settings.smoothing\n                ? `transition: ${this.settings.smoothingAmount}ms ease-out;`\n                : ``\n            }\n            ${\n              this.settings.fluidMode &&\n              `background-image: url(${afterUrl}); clip-path: inset(0 0 0 50%)`\n            }\n        `;\n\n        wrapper.appendChild(child);\n        this.wrapper = wrapper;\n        this.el.appendChild(this.wrapper);\n      }\n    }\n    if (this.settings.fluidMode) {\n      let url = children[0].src;\n      let fluidWrapper = document.createElement(\"div\");\n      fluidWrapper.style.cssText = `\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-image: url(${url});\n        background-size: cover;\n        background-position: center;\n      `;\n      this.el.appendChild(fluidWrapper);\n    }\n  }\n}\n\nexport default ImageCompare;\n"],"sourceRoot":""}